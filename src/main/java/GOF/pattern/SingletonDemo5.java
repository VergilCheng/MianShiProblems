package GOF.pattern;

/**
 * 枚举实现单例模式
 *
 * 特点：
 * 1.防止反射攻击：因为之前4个单例模式的实现，根本是通过将构造器私有化，禁止外部创建对象
 * 并且只能通过提供的静态方法来访问创建好的对象（本类中的静态方法可以访问自己私有的构造器来创建对象）。
 * 但是反射是可以绕过封装来调用私有构造器的。
 * 2.防止反序列化：见SingletonDemo6
 * 3.缺点：没有懒加载效果，没有延迟加载效果。
 * 4.优点：线程安全，并发效率高，由jvm保证线程安全
 */
public enum  SingletonDemo5 {

    //这个枚举元素，本身就是一个单例的SingletonDemo5对象
    Instace;

    public void singletonOption() {
        //添加对单例所需要的操作
    }

}
